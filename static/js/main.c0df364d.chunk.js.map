{"version":3,"sources":["Components/InputFullSalary.js","Helpers/formatHelpers.js","Components/InputReadOnly.js","Helpers/salary.js","Components/PieChart.js","App.js","index.js"],"names":["InputFullSalary","handleChangeSalary","event","props","onChangeSalary","target","value","fullSalary","this","type","name","id","onChange","step","min","Component","formatter","Intl","NumberFormat","style","minimumFractionDigits","formatterCurrency","currency","formatNumber","format","formatValue","InputReadOnly","state","color","textPercent","undefined","fontWeight","readOnly","INSS_TABLE","minValue","maxValue","difference","discountPercentage","discountValue","round","toFixed","calculateSalaryFrom","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","myChart","PieChart","info","percentINSS","percentIRPF","percentNetSalary","ctx","document","getElementById","Chart","data","labels","datasets","backgroundColor","options","maintainAspectRatio","legend","position","boxWidth","tooltips","bodyFontSize","bodyFontColor","bodyFontStyle","caretSize","displayColors","xPadding","yPadding","callbacks","label","tooltipItem","datasetIndex","index","_meta","controller","chart","display","update","className","App","newSalary","setState","parseInt","htmlFor","ReactDOM","render","StrictMode","M","AutoInit"],"mappings":"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","file":"static/js/main.c0df364d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class InputFullSalary extends Component {\r\n    handleChangeSalary = (event) => {\r\n        this.props.onChangeSalary(event.target.value);\r\n    };\r\n\r\n    render() {\r\n        const { fullSalary } = this.props;\r\n\r\n        return <input type=\"number\" name=\"fullSalary\" id=\"fullSalary\" value={fullSalary} onChange={this.handleChangeSalary} step=\"100\" min=\"0\" />;\r\n    }\r\n}\r\n","const formatter = Intl.NumberFormat('pt-BR', { style: 'percent', minimumFractionDigits: 2 });\r\nconst formatterCurrency = Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' });\r\n\r\nfunction formatNumber(value) {\r\n    return formatter.format(value);\r\n}\r\n\r\nfunction formatValue(value) {\r\n    return formatterCurrency.format(value);\r\n}\r\n\r\nexport { formatNumber, formatValue };\r\n","import React, { Component } from 'react';\r\nimport { formatNumber, formatValue } from '../Helpers/formatHelpers';\r\n\r\nexport default class InputReadOnly extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { id, value, fullSalary, color } = this.props;\r\n        const percent = value / fullSalary;\r\n\r\n        const textPercent = value === 0 || fullSalary === undefined ? '' : `(${formatNumber(percent)})`;\r\n\r\n        return <input type=\"text\" name={id} id={id} value={`${formatValue(value)} ${textPercent}`} style={{ color: color, fontWeight: 'bold' }} readOnly />;\r\n    }\r\n}\r\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom };\r\n","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport { formatNumber } from '../Helpers/formatHelpers';\r\n\r\nlet myChart;\r\n\r\nexport default class PieChart extends Component {\r\n    componentDidMount() {\r\n        const { fullSalary, discountINSS, discountIRPF, netSalary } = this.props.info;\r\n        const percentINSS = discountINSS / fullSalary;\r\n        const percentIRPF = discountIRPF / fullSalary;\r\n        const percentNetSalary = netSalary / fullSalary;\r\n\r\n        let ctx = document.getElementById('myChart');\r\n        myChart = new Chart(ctx, {\r\n            type: 'pie',\r\n            data: {\r\n                labels: ['Desconto INSS', 'Desconto IRPF', 'Salário Líquido'],\r\n                datasets: [\r\n                    {\r\n                        data: [percentINSS, percentIRPF, percentNetSalary],\r\n                        backgroundColor: ['#e67e22', '#c0392b', '#16a085'],\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    position: 'right',\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                    },\r\n                },\r\n                tooltips: {\r\n                    bodyFontSize: 14,\r\n                    bodyFontColor: 'white',\r\n                    bodyFontStyle: 'bold',\r\n                    backgroundColor: '#000000aa',\r\n                    caretSize: 0,\r\n                    displayColors: false,\r\n                    xPadding: 10,\r\n                    yPadding: 10,\r\n                    callbacks: {\r\n                        label: function (tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            return formatNumber(label);\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { fullSalary, discountINSS, discountIRPF, netSalary } = this.props.info;\r\n        const percentINSS = discountINSS / fullSalary;\r\n        const percentIRPF = discountIRPF / fullSalary;\r\n        const percentNetSalary = netSalary / fullSalary;\r\n\r\n        myChart.data.datasets[0].data = [percentINSS, percentIRPF, percentNetSalary];\r\n        if (fullSalary === 0) myChart.data.datasets[0]._meta[0].controller.chart.legend.options.display = false;\r\n        else myChart.data.datasets[0]._meta[0].controller.chart.legend.options.display = true;\r\n        myChart.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart-container col s12 m6 l6 offset-l3 valign-wrapper\">\r\n                <canvas id=\"myChart\"></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport InputFullSalary from './Components/InputFullSalary';\r\nimport InputReadOnly from './Components/InputReadOnly';\r\nimport { calculateSalaryFrom } from './Helpers/salary';\r\nimport PieChart from './Components/PieChart';\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fullSalary: 1000,\r\n        };\r\n    }\r\n\r\n    handleChangeSalary = (newSalary) => {\r\n        if (newSalary === '') newSalary = 0;\r\n        this.setState({\r\n            fullSalary: parseInt(newSalary),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { fullSalary } = this.state;\r\n        const { baseINSS, discountINSS, baseIRPF, discountIRPF, netSalary } = calculateSalaryFrom(fullSalary);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <h1 className=\"center-align teal-text text-darken-2\">React Salário</h1>\r\n                    </div>\r\n                    <form className=\"col s12 m6 l12\">\r\n                        <div className=\"input-field col s12 m12 l9\">\r\n                            <i className=\"material-icons prefix\">attach_money</i>\r\n                            <label htmlFor=\"fullSalary\">Salário Bruto:</label>\r\n                            <InputFullSalary fullSalary={fullSalary} onChangeSalary={this.handleChangeSalary} />\r\n                        </div>\r\n                        <div className=\"input-field col s12 m6 l3\">\r\n                            <label>Base INSS:</label>\r\n                            <InputReadOnly id=\"baseINSS\" value={baseINSS} />\r\n                        </div>\r\n                        <div className=\"input-field col s12 m6 l3\">\r\n                            <label>Desconto INSS:</label>\r\n                            <InputReadOnly id=\"discountINSS\" value={discountINSS} fullSalary={fullSalary} color={'#e67e22'} />\r\n                        </div>\r\n                        <div className=\"input-field col s12 m6 l3\">\r\n                            <label>Base IRPF:</label>\r\n                            <InputReadOnly id=\"baseIRPF\" value={baseIRPF} />\r\n                        </div>\r\n                        <div className=\"input-field col s12 m6 l3\">\r\n                            <label>Desconto IRPF:</label>\r\n                            <InputReadOnly id=\"discountIRPF\" value={discountIRPF} fullSalary={fullSalary} color={'#c0392b'} />\r\n                        </div>\r\n                        <div className=\"input-field col s12 m12 l3\">\r\n                            <label>Salário Líquido:</label>\r\n                            <InputReadOnly id=\"netSalary\" value={netSalary} fullSalary={fullSalary} color={'#16a085'} />\r\n                        </div>\r\n                    </form>\r\n                    <PieChart info={{ fullSalary, discountINSS, discountIRPF, netSalary }} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport M from 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n    M.AutoInit()\n);\n"],"sourceRoot":""}